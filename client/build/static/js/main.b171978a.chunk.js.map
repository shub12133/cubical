{"version":3,"sources":["redux/auth/auth.types.js","redux/auth/auth.reducer.js","redux/alert/alert.types.js","redux/alert/alert.reducer.js","redux/product/product.types.js","redux/product/product.reducer.js","redux/question/question.types.js","redux/question/question.reducer.js","redux/cart/cart.types.js","redux/cart/cart.reducer.js","redux/root-reducer.js","redux/store.js","utils/setAuthToken.js","redux/alert/alert.actions.js","redux/cart/cart.actions.js","redux/auth/auth.actions.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/Alert.js","components/auth/Register.js","components/auth/Login.js","components/routing/PrivateRoute.js","components/products/Pagination/Pagination.js","redux/product/product.actions.js","components/products/ProductItem/ProductItem.js","components/layout/Spinner.js","components/dashboard/Dashboard.js","components/product-forms/CreateProduct.js","components/products/Products.js","components/product-forms/EditProduct.js","components/product/Question/QuestionForm.js","redux/question/question.actions.js","components/product/Question/Question.js","components/product/Product.js","components/profile/Profile.js","components/cart/CartItem.js","components/cart/StripeButton.js","components/cart/Cart.js","App.js","index.js"],"names":["AuthActionTypes","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","USER_ERROR","initialState","token","localStorage","getItem","isAuthenticated","loading","user","authReducer","state","action","type","payload","setItem","ACCOUNT_DELETED","removeItem","AlertActionTypes","alertReducer","filter","alert","id","ProductActionTypes","products","totalProducts","product","error","productReducer","totalItems","map","_id","QuestionActionTypes","questions","questionReducer","question","text","CartActionTypes","cartItems","totalPrice","totalQuantity","cartReducer","cartItem","combineReducers","auth","cart","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","setAuthToken","axios","defaults","headers","common","setAlert","msg","alertType","timeout","dispatch","uuid","v4","setTimeout","getCartProducts","a","async","get","res","data","response","statusText","status","loadUser","connect","logout","useEffect","authLinks","className","to","onClick","href","guestLinks","data-toggle","data-target","alerts","length","key","role","register","name","email","password","config","body","JSON","stringify","post","errors","forEach","useState","password2","formData","setFormData","onChange","e","target","value","class","onSubmit","preventDefault","placeholder","required","login","minLength","Component","component","rest","render","props","Pagination","productsPerPage","paginate","pageNumbers","i","Math","ceil","push","number","deleteSingleProduct","history","delete","getUserProducts","page","getProduct","addProductToCart","productId","price","image","src","alt","Spinner","currentPage","setCurrentPage","pageNumber","addProduct","productData","FormData","append","description","withRouter","showImage","setShowImage","imageName","setImageName","htmlFor","files","onChangeImage","getAllProducts","compose","editProduct","put","match","params","askQuestion","message","setText","cols","rows","deleteQuestion","updateQuestion","date","addAnswer","userId","productUserId","editMode","setEditMode","textToEdit","setTextToEdit","format","getQuestions","deleteCartItem","quantity","postCartPayment","amount","priceForStripe","label","billingAddress","shippingAddress","panelLabel","stripeKey","App","exact","path","Landing","Register","Login","Dashboard","CreateProduct","Products","EditProduct","Product","Profile","Cart","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b171978a.chunk.js","sourcesContent":["export const AuthActionTypes = {\n    REGISTER_SUCCESS: 'REGISTER_SUCCESS',\n    REGISTER_FAIL: 'REGISTER_FAIL',\n    USER_LOADED: 'USER_LOADED',\n    AUTH_ERROR: 'AUTH_ERROR',\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n    LOGIN_FAIL: 'LOGIN_FAIL',\n    LOGOUT: 'LOGOUT',\n    USER_ERROR: \"USER_ERROR\",\n    }","import {AuthActionTypes} from \"./auth.types\";\n\n\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\n\nconst authReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case AuthActionTypes.USER_LOADED:\n          return {\n            ...state,\n            isAuthenticated: true,\n            loading: false,\n            user: payload\n          };\n        case AuthActionTypes.REGISTER_SUCCESS:\n        case AuthActionTypes.LOGIN_SUCCESS:\n          localStorage.setItem('token', payload.token);\n          return {\n            ...state,\n            ...payload,\n            isAuthenticated: true,\n            loading: false\n          };\n        case AuthActionTypes.REGISTER_FAIL:\n        case AuthActionTypes.AUTH_ERROR:\n        case AuthActionTypes.LOGIN_FAIL:\n        case AuthActionTypes.LOGOUT:\n        case AuthActionTypes.ACCOUNT_DELETED:\n          case AuthActionTypes.USER_ERROR:\n          localStorage.removeItem('token');\n          return {\n            ...state,\n            token: null,\n            isAuthenticated: false,\n            loading: false\n          };\n        default:\n          return state;\n    }\n}\n\nexport default authReducer","export const AlertActionTypes = {\n    SET_ALERT: 'SET_ALERT',\n    REMOVE_ALERT: 'REMOVE_ALERT'\n    }","import {AlertActionTypes} from \"./alert.types\";\n\nconst initialState = [];\n\nconst alertReducer = (state = initialState, action) => {\n    const {type, payload} = action;\n    switch (type) {\n        case AlertActionTypes.SET_ALERT:\n            return [...state, payload];\n          case AlertActionTypes.REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}\n\nexport default alertReducer;","export const ProductActionTypes = {\n    ADD_PRODUCT: \"ADD_PRODUCT\",\n    PRODUCT_ERROR: \"PRODUCT_ERROR\",\n    GET_PRODUCTS: \"GET_PRODUCTS\",\n    DELETE_PRODUCT: \"DELETE_PRODUCT\",\n    UPDATE_PRODUCT: \"UPDATE_PRODUCT\",\n    GET_PRODUCT: \"GET_PRODUCT\"\n}","import {ProductActionTypes} from \"./product.types\";\n\nconst initialState = {\n    products: [],\n    totalProducts: null,\n    product: null,\n    loading: true,\n    error: {}\n}\n\nconst productReducer = (state = initialState, action) => {\n    const {payload, type} = action;\n    switch(type) {\n        case ProductActionTypes.GET_PRODUCTS:\n            return {\n                ...state,\n                products: payload.products,\n                totalProducts: payload.totalItems,\n                loading: false\n            }\n            case ProductActionTypes.GET_PRODUCT:\n                return {\n                    ...state,\n                    product: payload,\n                    loading: false\n                }\n        case ProductActionTypes.ADD_PRODUCT:\n            return {\n                ...state,\n                products: [payload, ...state.products],\n                loading: false\n            }\n            case ProductActionTypes.UPDATE_PRODUCT:\n                return {\n                    ...state,\n                    products: state.products.map(product => product._id === payload.id ? {product: payload.product} : product),\n                    loading: false\n                }\n            case ProductActionTypes.DELETE_PRODUCT:\n                return {\n                    ...state,\n                    products: state.products.filter(product => product._id !== payload),\n                    loading: false\n                }\n            case ProductActionTypes.PRODUCT_ERROR: \n            return {\n                ...state,\n                error: payload,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default productReducer","export const QuestionActionTypes = {\n    GET_QUESTIONS: \"GET_QUESTIONS\",\n    ASK_QUESTION: \"ASK_QUESTION\",\n    QUESTION_ERROR: \"QUESTION_ERROR\",\n    DELETE_QUESTION: \"DELETE_QUESTION\",\n    UPDATE_QUESTION: \"UPDATE_QUESTION\"\n}","import {QuestionActionTypes} from \"./question.types\";\n\n\nconst initialState = {\n    questions: [],\n    loading: true,\n    error: {}\n}\n\nconst questionReducer = (state = initialState, action) => {\n    const {payload, type} = action;\n    switch (type) {\n        case QuestionActionTypes.GET_QUESTIONS:\n            return {\n                ...state,\n                questions: payload,\n                loading: false\n            }\n            case QuestionActionTypes.ASK_QUESTION:\n                return {\n                    ...state,\n                    questions: [payload, ...state.questions],\n                    loading: false\n                }\n                case QuestionActionTypes.DELETE_QUESTION:\n                    return {\n                        ...state,\n                        questions: state.questions.filter(question => question._id !== payload),\n                        loading: false\n                    }\n                    case QuestionActionTypes.UPDATE_QUESTION:\n                        return {\n                            ...state,\n                            questions: state.questions.map(question => question._id === payload.id ? {...question, text: payload.text} : question),\n                            loading: false\n                        }\n            case QuestionActionTypes.QUESTION_ERROR:\n                return {\n                    ...state,\n                    error: payload,\n                    loading: false\n                }\n        default:\n            return state;\n    }\n}\n\nexport default questionReducer","export const CartActionTypes = {\n    ADD_PRODUCT_TO_CART: \"ADD_PRODUCT_TO_CART\",\n    GET_CART_PRODUCTS: \"GET_CART_PRODUCTS\",\n    CART_ERROR: \"CART_ERROR\",\n    DELETE_CART_PRODUCT: \"DELETE_CART_PRODUCT\",\n    CART_CHECKOUT: \"CART_CHECKOUT\"\n}","import {CartActionTypes} from \"./cart.types\";\n\n\nconst initialState = {\n    cartItems: null,\n    totalPrice: null,\n    totalQuantity: null,\n    loading: true,\n    error: {}\n}\n\n\nconst cartReducer = (state = initialState, action) => {\n    const {payload, type} = action;\n    switch (type) {\n        case CartActionTypes.GET_CART_PRODUCTS:\n            return {\n                ...state,\n                cartItems: payload.products,\n                totalPrice: payload.totalPrice,\n                totalQuantity: payload.totalQuantity,\n                loading: false\n            }\n            case CartActionTypes.DELETE_CART_PRODUCT:\n                return {\n                    ...state,\n                    cartItems: state.cartItems.filter(cartItem => cartItem._id !== payload),\n                    loading: false\n                }\n            case CartActionTypes.ADD_PRODUCT_TO_CART:\n                return {\n                    ...state,\n                    cartItems: [payload, ...state.cartItems],\n                    loading: false\n                }\n                case CartActionTypes.CART_CHECKOUT:\n                    return {\n                        ...state,\n                        cartItems: null,\n                        totalPrice: null,\n                        totalQuantity: null,\n                        loading: false,\n                    }\n            case CartActionTypes.CART_ERROR:\n                return {\n                    ...state,\n                    error: payload,\n                    loading: false\n                }\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer","import { combineReducers } from 'redux';\n\nimport authReducer from './auth/auth.reducer';\nimport alertReducer from \"./alert/alert.reducer\";\nimport productReducer from './product/product.reducer';\nimport questionReducer from './question/question.reducer';\nimport cartReducer from './cart/cart.reducer';\n\nexport default combineReducers({\n  auth: authReducer,\n  alert: alertReducer,\n  product: productReducer,\n  question: questionReducer,\n  cart: cartReducer\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './root-reducer';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import uuid from \"uuid\";\nimport {AlertActionTypes} from \"./alert.types\";\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuid.v4();\n    dispatch({\n      type: AlertActionTypes.SET_ALERT,\n      payload: { msg, alertType, id }\n    });\n  \n    setTimeout(() => dispatch({ type: AlertActionTypes.REMOVE_ALERT, payload: id }), timeout);\n  };","import axios from \"axios\";\nimport {CartActionTypes} from \"./cart.types\";\nimport {setAlert} from \"../alert/alert.actions\";\n\n\nexport const addProductToCart = productId => async dispatch => {\n    try {\n        const res = await axios.post(`/cart/${productId}`);\n        dispatch({\n            type: CartActionTypes.ADD_PRODUCT_TO_CART,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Successfully added product to cart\", \"success\"));\n    } catch (err) {\n        dispatch({\n            type: CartActionTypes.CART_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\n\nexport const getCartProducts = () => async dispatch => {\n    try {\n        const res = await axios.get(`/cart`);\n        dispatch({\n            type: CartActionTypes.GET_CART_PRODUCTS,\n            payload: {products: res.data.products, totalPrice: res.data.totalPrice, totalQuantity: res.data.totalQuantity}\n        });\n    } catch (err) {\n        dispatch({\n            type: CartActionTypes.CART_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\n\nexport const deleteCartItem = id => async dispatch => {\n    try {\n        await axios.delete(`/cart/cart-delete/${id}`);\n        dispatch({\n            type: CartActionTypes.DELETE_CART_PRODUCT,\n            payload: id\n        });\n        dispatch(setAlert(\"Successfully removed item from cart\", \"success\"));\n        dispatch(getCartProducts());\n    } catch (err) {\n        dispatch({\n            type: CartActionTypes.CART_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\nexport const postCartPayment = (amount, token) => async dispatch => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    const body = JSON.stringify({amount, token});\n\n    try {\n        await axios.post(\"/cart/payment\", body, config);\n        dispatch({\n            type: CartActionTypes.CART_CHECKOUT\n        })\n        dispatch(setAlert(\"Payment went through successfully!\", \"success\"));\n    } catch (err) {\n        dispatch(setAlert(\"There was an issue with your payment\", \"danger\"))\n        dispatch({\n            type: CartActionTypes.CART_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            });\n    }\n\n}","import axios from \"axios\";\nimport {setAlert} from \"../alert/alert.actions\"\nimport {AuthActionTypes} from \"./auth.types\"\nimport setAuthToken from \"../../utils/setAuthToken\"\nimport { getCartProducts } from \"../cart/cart.actions\";\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n  \n    try {\n      const res = await axios.get('/auth');\n  \n      dispatch({\n        type: AuthActionTypes.USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AuthActionTypes.AUTH_ERROR\n      });\n    }\n  };\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  \n    const body = JSON.stringify({ name, email, password });\n  \n    try {\n      const res = await axios.post('/auth/signup', body, config);\n  \n      dispatch({\n        type: AuthActionTypes.REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n      dispatch(getCartProducts());\n    } catch (err) {\n      const errors = err.response.data.errors;\n  \n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n  \n      dispatch({\n        type: AuthActionTypes.REGISTER_FAIL\n      });\n    }\n  };\n\n    // Login User\nexport const login = (email, password) => async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  \n    const body = JSON.stringify({ email, password });\n  \n    try {\n      const res = await axios.post('/auth/signin', body, config);\n  \n      dispatch({\n        type: AuthActionTypes.LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n      dispatch(getCartProducts());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n  \n      dispatch({\n        type: AuthActionTypes.LOGIN_FAIL\n      });\n    }\n  };\n\n    // Logout / Clear Profile\nexport const logout = () => dispatch => {\n    dispatch({ type: AuthActionTypes.LOGOUT });\n  };","import React, {Fragment, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth/auth.actions\"\nimport { getCartProducts } from '../../redux/cart/cart.actions';\n\nconst Navbar = ({auth: {isAuthenticated, loading}, cart: {totalQuantity, cartItems}, getCartProducts, logout}) => {\n\n    useEffect(() => {\n        getCartProducts();\n    }, [cartItems])\n\n    const authLinks = (\n        <ul className=\"navbar-nav ml-auto\">\n        <li className=\"nav-item\">\n        <Link className=\"nav-link\"\n         to=\"/cart\"> {totalQuantity} <i className=\"fas fa-shopping-cart\" /> {\" \"}\n         <span className=\"hide-sm text-info font-weight-bold text-monospace\">\n         Cart\n         </span>\n         </Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link className=\"nav-link text-info font-weight-bold text-monospace\" to=\"/products\">Products</Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n            <i className=\"fas fa-user\" /> {\" \"}\n            <span className=\"hide-sm text-info font-weight-bold text-monospace\">Dashboard</span>\n            </Link>\n        </li>\n        <li className=\"nav-item\">\n        <a onClick={logout} className=\"nav-link\" href=\"#!\">\n        <i className=\"fas fa-sign-out-alt\" /> {\" \"}\n        <span className=\"hide-sm text-info font-weight-bold text-monospace\">Logout</span>\n        </a>\n    </li>\n    </ul>\n    );\n\n    const guestLinks = (\n        <ul className=\"navbar-nav ml-auto text-info\">\n        <li className=\"nav-item\">\n            <Link className=\"nav-link text-info font-weight-bold text-monospace\" to=\"/register\">Register</Link>\n        </li>\n        <li className=\"nav-item\">\n            <Link className=\"nav-link text-info font-weight-bold text-monospace\" to=\"/login\">Login</Link>\n        </li>\n    </ul>\n    );\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-light bg-dark mb-3\">\n        <div className=\"container\">\n            <Link className=\"navbar-brand text-primary text-monospace font-italic\" to={isAuthenticated ? \"/dashboard\" : \"/\"}> <i className=\"fas fa-business-time\" /> {\" \"} Cubical</Link>\n            <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                {!loading && (\n                    <Fragment> {isAuthenticated ? authLinks : guestLinks} \n                    </Fragment>\n                )}\n            </div>\n        </div>\n    </nav>\n    );\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    cart: state.cart,\n})\n\nexport default connect(mapStateToProps, {logout, getCartProducts})(Navbar);\n","import React from 'react';\nimport {Link, Redirect} from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst Landing = ({isAuthenticated}) => {\n    if (isAuthenticated) {\n      return <Redirect to=\"/dashboard\" />\n    }\n    return (\n        <section id=\"showcase\">\n        <div className=\"overlay text-danger\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-12 text-center\">\n                <h1 className=\"display-2 mt-5 pt-5\">\n                  Start To Make Money Today!\n                </h1>\n                <p className=\"lead\">Buy, Sell & Profit <i className=\"fas fa-search-dollar\"/> </p>\n                <Link to=\"/register\" className=\"btn mr-3 btn-outline-info btn-md text-white\">\n                 Sign Up\n                </Link>\n                <Link to=\"/login\" className=\"btn btn-outline-primary btn-md text-white\">\n                Sign In\n               </Link>\n              </div>\n            </div>\n          </div>\n        </div> \n        </section>\n    );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps)(Landing);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map(alert => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`} role=\"alert\">\n      {alert.msg}\n    </div>\n  ));\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","import React, {Fragment, useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {setAlert} from \"../../redux/alert/alert.actions\";\nimport {register} from \"../../redux/auth/auth.actions\"\nimport {connect} from \"react-redux\";\n\nconst Register = ({setAlert, register, isAuthenticated}) => {\n    const [formData,\n        setFormData] = useState({name: '', email: '', password: '', password2: ''});\n\n    const {name, email, password, password2} = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2) {\n          setAlert('Passwords do not match', 'danger');\n        } else {\n          register({ name, email, password });\n        }\n      };\n\n      \n      if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n      }\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div class=\"col-lg-12 text-center\">\n                        <div class=\"card bg-danger text-center card-form\">\n                            <div class=\"card-body\">\n                                <h3 className=\"text-primary text-monospace\">Sign Up Today</h3>\n                                <p className=\"text-success font-weight-bold\">Please fill out this form to register</p>\n                                <form onSubmit={onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            onChange={e => onChange(e)}\n                                            type=\"text\"\n                                            value={name}\n                                            name='name'\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Name\"\n                                            required/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                        onChange={e => onChange(e)}\n                                            type=\"email\"\n                                            name='email'\n                                            value={email}\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Email\"\n                                            required/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                        onChange={e => onChange(e)}\n                                            type=\"password\"\n                                            name='password'\n                                            value={password}\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Password\"\n                                            required/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                            value={password2}\n                                            onChange={e => onChange(e)}\n                                            type=\"password\"\n                                            name='password2'\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Confirm Password\"\n                                            required/>\n                                    </div>\n                                    <input type=\"submit\" value=\"Register\" className=\"btn btn-outline-warning btn-block\"/>\n                                    <Link to=\"/login\">\n                                        <p className=\"text-info\">Already have an account ?</p>\n                                    </Link>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n\n\nexport default connect(mapStateToProps, {setAlert, register})(Register);\n","import React, {Fragment, useState} from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth/auth.actions\";\n\n\nconst Login = ({login, isAuthenticated}) => {\n\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n      });\n\n      const { email, password } = formData;\n\n      const onChange = e =>\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n\n      const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password);\n      };\n\n      if (isAuthenticated) {\n        return <Redirect to='/dashboard' />;\n      }\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 text-center\">\n                        <div className=\"card bg-warning text-center card-form\">\n                            <div className=\"card-body\">\n                                <h3 className=\"text-danger font-weight-bold\">Sign Into Your Account</h3>\n                                <form onSubmit={onSubmit}>\n                                    <div className=\"form-group\">\n                                        <input\n                                            onChange={e => onChange(e)}\n                                            type=\"email\"\n                                            name='email'\n                                            value={email}\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Email\"\n                                            required/>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input\n                                        onChange={e => onChange(e)}\n                                            type=\"password\"\n                                            name='password'\n                                            value={password}\n                                            minLength='6'\n                                            className=\"form-control form-control-lg\"\n                                            placeholder=\"Password\"\n                                            required/>\n                                    </div>\n                                    <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\"/>\n                                    <Link to=\"/register\">\n                                        <p className=\"text-dark\">Don't Have an account? </p>\n                                    </Link>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n  });\n\nexport default connect(mapStateToProps, {login})(Login);\n\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","\nimport React from 'react';\n\nconst Pagination = ({ productsPerPage, totalProducts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalProducts / productsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='pagination'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <button onClick={() => paginate(number)} className='btn btn-dark m-5'>\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import {ProductActionTypes} from \"./product.types\"\nimport {setAlert} from \"../alert/alert.actions\"\nimport axios from \"axios\"\n\n\n// Add A Product\nexport const addProduct = (productData, history) => async dispatch => {\n    const formData = new FormData();\n    formData.append(\"name\", productData.name);\n    formData.append(\"description\", productData.description);\n    formData.append(\"price\", productData.price);\n    formData.append(\"image\", productData.image);\n    try {\n        const res = await axios.post(\"/products\", formData);\n        dispatch({\n            type: ProductActionTypes.ADD_PRODUCT,\n            payload: res.data\n        });\n        history.push(\"/dashboard\");\n        dispatch(setAlert(\"Product created successfully\", \"success\"))\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n        type: ProductActionTypes.PRODUCT_ERROR,\n        payload: {msg: err.response.statusText, status: err.response.status}\n        })\n    }\n}\n\n// Get all products\nexport const getAllProducts = page => async dispatch => {\n    try {\n        const res = await axios.get(`/products?page=${page}`);\n        dispatch({\n            type: ProductActionTypes.GET_PRODUCTS,\n            payload: {products: res.data.products, totalItems: res.data.totalItems}\n        })\n    } catch (err) {\n        dispatch({\n            type: ProductActionTypes.PRODUCT_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\n// Delete a product\nexport const deleteSingleProduct = (id, history) => async dispatch => {\n    try {\n        await axios.delete(`/products/${id}`);\n        dispatch({\n            type: ProductActionTypes.DELETE_PRODUCT,\n            payload: id\n        });\n        dispatch(setAlert(\"Product deleted successfully\", \"success\"));\n        if (history) {\n            return history.push(\"/dashboard\")\n        }\n    } catch (err) {\n        dispatch({\n            type: ProductActionTypes.PRODUCT_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\n// Get A Single users products\nexport const getUserProducts = (id, page) => async dispatch => {\n    try {\n        const res = await axios.get(`/products/${id}?page=${page}`);\n        dispatch({\n            type: ProductActionTypes.GET_PRODUCTS,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type: ProductActionTypes.PRODUCT_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\n// Edit a Product\nexport const editProduct = (productData, history, id) => async dispatch => {\n    const formData = new FormData();\n    formData.append(\"name\", productData.name);\n    formData.append(\"description\", productData.description);\n    formData.append(\"price\", productData.price);\n    formData.append(\"image\", productData.image);\n    try {\n        const res = await axios.put(`/products/edit/${id}`, formData);\n        dispatch({\n            type: ProductActionTypes.UPDATE_PRODUCT,\n            payload: res.data\n        });\n        dispatch(setAlert(\"Product updated successfully\", \"success\"))\n        history.push(\"/dashboard\")\n    } catch (err) {\n        dispatch({\n            type: ProductActionTypes.PRODUCT_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            })\n    }\n}\n\n// Get a single product by ID\nexport const getProduct = id => async dispatch => {\n    try {\n        const res = await axios.get(`/products/product/${id}`);\n        dispatch({\n            type: ProductActionTypes.GET_PRODUCT,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: ProductActionTypes.PRODUCT_ERROR,\n            payload: {msg: err.response.statusText, status: err.response.status}\n            });\n    }\n}","import React, {Fragment} from 'react';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteSingleProduct } from '../../../redux/product/product.actions';\nimport { addProductToCart } from '../../../redux/cart/cart.actions';\n\nconst ProductItem = ({\n    deleteSingleProduct,\n    auth,\n    addProductToCart,\n    product: {\n        _id,\n        name,\n        price,\n        image,\n        user\n    }\n}) => {\n    return (\n        <Fragment>\n            <div className=\"card bg-success rounded-lg\">\n                <img src={image} className=\"card-img-top\" alt=\"product\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-center text-danger bg-warning\">\n                        {name}\n                    </h5>\n                    <p className=\"card-text font-weight-bold text-center\">Price: {price} <i className=\"fas fa-dollar-sign\" /></p>\n                                        <Link className=\"btn btn-outline-warning mx-1\" to={`/products/${_id}`}>View</Link>\n                    {user._id === auth.user._id ? (\n                        <Fragment>\n                        <Link className=\"text-center btn btn-outline-danger mx-1\" to={`/products/edit/${_id}`}><i className=\"fas fa-edit\" /> </Link>\n                        <button className=\"btn btn-outline-dark\" onClick={() => deleteSingleProduct(_id, null)}> <i className=\"fas fa-trash-alt\" /> </button>\n                        </Fragment>\n                    ) : (\n                        <Fragment>\n                        <button onClick={() => addProductToCart(_id)} className=\"btn btn-outline-danger\"> <i className=\"fas fa-cart-plus\"/></button>\n                        </Fragment>\n                    )}\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {deleteSingleProduct, addProductToCart})(ProductItem);\n","import React, {Fragment} from 'react';\n\nconst Spinner = () => {\n    return (\n        <Fragment>\n            <div className=\"text-center\">\n                <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Spinner;\n","import React, {useEffect, Fragment, useState} from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Pagination from '../products/Pagination/Pagination';\nimport ProductItem from '../products/ProductItem/ProductItem';\nimport {loadUser} from \"../../redux/auth/auth.actions\";\nimport { getUserProducts } from '../../redux/product/product.actions';\nimport Spinner from '../layout/Spinner';\n\nconst Dashboard = ({product: {products, loading, totalProducts}, loadUser, getUserProducts, auth: {user}}) => {\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [productsPerPage] = useState(6);\n\n    useEffect(() => {\n        loadUser();\n        if (user) {\n            getUserProducts(user._id, currentPage)\n        }\n    }, [currentPage, user]);\n\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n\n    return (\n        <Fragment>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                <h1 className=\"text-monospace text-info display-2\">Dashboard</h1>\n                <Link to=\"/add-product\" className=\"btn btn-block btn-warning\">Add Product <i className=\"far fa-money-bill-alt\" /> </Link>\n                </div>\n            </div>\n        </div>\n        <br />\n        {loading && (\n            <Spinner />\n        )}\n        <div className=\"container\">\n        <div className=\"row\">\n        {products.map(product => (\n            <div className=\"col-md-4 col-6\">\n                <ProductItem key={product._id} product={product} /> \n            </div>\n        ))};\n        <div className=\"col-12\">\n        {products && (\n                    <Pagination productsPerPage={productsPerPage} totalProducts={totalProducts} paginate={paginate} />\n        )}\n        </div>\n        </div>\n        </div>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    product: state.product,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {getUserProducts, loadUser})(Dashboard);\n","import React, {Fragment, useState} from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {addProduct} from '../../redux/product/product.actions';\n\nconst CreateProduct = ({history, addProduct}) => {\n    const [formData,\n        setFormData] = useState({name: \"\", description: \"\", price: 10, image: \"\"});\n    const [showImage, setShowImage] = useState(false);\n    const [imageName, setImageName] = useState(\"\");\n\n    const onChangeImage = e => {\n        setFormData({...formData, image: e.target.files[0]});\n        setShowImage(true);\n        setImageName(e.target.files[0].name)\n    }\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n\n        const onSubmit = e => {\n        e.preventDefault();\n        addProduct(formData, history);\n    }\n\n    const {name, description, price} = formData;\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col text-info font-weight-bold m-2\">\n                    *- All Fields Requried\n                        <form onSubmit={e => onSubmit(e)}>\n                        <div className=\"form-group m-2\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" placeholder=\"Enter Products Name\" name=\"name\" value={name} onChange={e => onChange(e)} className=\"form-control\" required/>\n                        </div>\n                        <div className=\"form-group m-2\">\n                        <label htmlFor=\"price\">Price</label>\n                        <input type=\"number\" name=\"price\" placeholder=\"Enter Products Price\" value={price} onChange={e => onChange(e)}  className=\"form-control\" required/>\n                        </div>\n                        <div className=\"custom-file m-2\">\n                        <input type=\"file\"  onChange={e => onChangeImage(e)}  className=\"custom-file-input bg-info\" required/>\n                        <label className=\"custom-file-label\">{showImage ? imageName : \"Upload Image\"}</label>\n                      </div>\n                        <div className=\"form-group m-2\">\n                        <label htmlFor=\"title\">Description</label>\n                        <textarea name=\"description\" onChange={e => onChange(e)} placeholder=\"Enter Products description\" value={description} className=\"form-control\" required/>\n                        </div>\n                        <input type=\"submit\" value=\"Add Product\" className=\"btn btn-block btn-info\"/>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    );\n}\n\nexport default connect(null, {addProduct})(withRouter(CreateProduct));\n","import React, {Fragment, useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport { getAllProducts } from '../../redux/product/product.actions';\nimport Spinner from '../layout/Spinner';\nimport Pagination from './Pagination/Pagination';\nimport ProductItem from './ProductItem/ProductItem';\n\nconst Products = ({getAllProducts, product: {products, totalProducts, loading}}) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [productsPerPage] = useState(6);\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    \n    useEffect(() => {\n        getAllProducts(currentPage);\n    }, [currentPage, getAllProducts]);\n\n    return loading ? <Spinner /> : (\n        <Fragment>\n        <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col text-center\">\n        <h1 className=\"text-warning text-monospace\">Products</h1>\n        <p className=\"lead text-success font-weight-bold\">\n         Find Your Item Today\n        </p>\n        </div>\n        </div>\n        </div>\n        <div className=\"container\">\n        <div className=\"row\">\n        {products.map(product => (\n            <div className=\"col-md-4 col-6\">\n                <ProductItem key={product._id} product={product} /> \n            </div>\n        ))};\n        <div className=\"col-12\">\n        {products && (\n                    <Pagination productsPerPage={productsPerPage} totalProducts={totalProducts} paginate={paginate} />\n        )}\n\n        </div>\n        </div>\n        </div>\n        </Fragment>\n    );\n} \n\n\nconst mapStateToProps = state => ({\n    product: state.product\n});\n\nexport default connect(mapStateToProps, {getAllProducts})(Products);\n","import React, {Fragment, useState, useEffect} from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {editProduct, getProduct} from '../../redux/product/product.actions';\nimport Spinner from '../layout/Spinner';\nimport { compose } from 'redux';\n\nconst EditProduct = ({history, editProduct, getProduct, match, product: {loading, product}}) => {\n\n    const [formData,\n        setFormData] = useState({name: \"\", description: \"\", price: null, image: \"\"});\n    const [showImage, setShowImage] = useState(false);\n    const [imageName, setImageName] = useState(\"\");\n\n\n    useEffect(() => {\n        getProduct(match.params.id);\n        setFormData({\n            name: loading || !product.name ? \"\" : product.name,\n            description: loading || !product.description ? \"\" : product.description,\n            price: loading || !product.price ? \"\" : product.price,\n            image: \"\"\n        })\n\n    }, [getProduct, loading]);\n\n\n\n\n\n    const {name, description, price} = formData;\n\n    const onChangeImage = e => {\n        setFormData({...formData, image: e.target.files[0]});\n        setShowImage(true);\n        setImageName(e.target.files[0].name);\n    }\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    });\n\n        const onSubmit = e => {\n        e.preventDefault();\n        editProduct(formData, history, match.params.id);\n        }\n\n\n\n    return (\n        <Fragment>\n            <div className=\"container\">\n                <div className=\"row\">\n                {loading && (\n                    <Spinner />\n                )}\n                    <div className=\"col text-info font-weight-bold m-2\">\n                    *- All Fields Requried!\n                        <form onSubmit={e => onSubmit(e)}>\n                        <div className=\"form-group m-2\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input type=\"text\" placeholder=\"Enter Products Name\" name=\"name\" value={name} onChange={e => onChange(e)} className=\"form-control\" required/>\n                        </div>\n                        <div className=\"form-group m-2\">\n                        <label htmlFor=\"price\">Price</label>\n                        <input type=\"number\" name=\"price\" placeholder=\"Enter Products Price\" value={price} onChange={e => onChange(e)}  className=\"form-control\" required/>\n                        </div>\n                        <div className=\"custom-file m-2\">\n                        <input type=\"file\"  onChange={e => onChangeImage(e)}  className=\"custom-file-input bg-info\" required/>\n                        <label className=\"custom-file-label\">{showImage ? imageName : \"Upload Image\"}</label>\n                      </div>\n                        <div className=\"form-group m-2\">\n                        <label htmlFor=\"title\">Description</label>\n                        <textarea name=\"description\" onChange={e => onChange(e)} placeholder=\"Enter Products description\" value={description} className=\"form-control\" required/>\n                        </div>\n                        <input type=\"submit\" value=\"Edit Product\" className=\"btn btn-block btn-info\"/>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    product: state.product,\n    auth: state.auth\n});\n\nexport default compose(withRouter, connect(mapStateToProps, {editProduct, getProduct}))(EditProduct);\n","import React, {useState, Fragment} from 'react';\nimport {connect} from \"react-redux\";\nimport {askQuestion} from \"../../../redux/question/question.actions\";\n\nconst QuestionForm = ({id, askQuestion}) => {\n\n    const [text, setText] = useState(\"\");\n    const onSubmit = e => {\n        e.preventDefault();\n        askQuestion({text}, id);\n    }\n\n    return (\n        <Fragment>\n        <form onSubmit={e => onSubmit(e)}> \n        <p className=\"lead text-danger text-monospace font-weight-bold mt-5 font-italic\">Any Questions About The Product</p>\n        <textarea placeholder=\"Do You Have Any Question ...\" value={text} onChange={e => setText(e.target.value)} cols=\"10\" rows=\"1\" className=\"form-control\" required></textarea>\n        <input type=\"submit\" className=\"btn btn-outline-warning mt-2\"/>\n        </form>\n        </Fragment>\n    );\n}\n\nexport default connect(null, {askQuestion})(QuestionForm);\n","import axios from \"axios\";\nimport {setAlert} from \"../alert/alert.actions\";\nimport {QuestionActionTypes} from \"./question.types\";\n\n\n// Ask a question\nexport const askQuestion = (text, id) => async dispatch => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    try {\n        const res = await axios.post(`/questions/${id}`, text, config);\n        dispatch({\n            type: QuestionActionTypes.ASK_QUESTION,\n            payload: res.data\n        })\n        dispatch(setAlert(\"You Asked Your Question Successfully\", \"success\"));\n    } catch (err) {\n        dispatch({\n            type: QuestionActionTypes.QUESTION_ERROR,\n            payload: { msg: err.message, status: err.response.status }\n          });\n    }\n}\n\n// Get Questions\nexport const getQuestions = id => async dispatch => {\n    try {\n        const res = await axios.get(`/questions/${id}`);\n        dispatch({\n            type: QuestionActionTypes.GET_QUESTIONS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: QuestionActionTypes.QUESTION_ERROR,\n            payload: { msg: err.message, status: err.response.status }\n          });\n    }\n}\n\n// Update Question\nexport const updateQuestion = (text, id) => async dispatch => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    const body = JSON.stringify({text})\n\n    try {\n        const res = await axios.put(`/questions/${id}`, body, config);\n        dispatch({\n            type: QuestionActionTypes.UPDATE_QUESTION,\n            payload: {text, id}\n        });\n        dispatch(setAlert(\"Successfully updated your question\", \"success\"));\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n          errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: QuestionActionTypes.QUESTION_ERROR,\n            payload: { msg: err.response.statusText, status: err.response.status }\n        })\n    }\n}\n\n// Delete Question \nexport const deleteQuestion = id => async dispatch => {\n    try {\n        await axios.delete(`/questions/${id}`);\n        dispatch({\n            type: QuestionActionTypes.DELETE_QUESTION,\n            payload: id\n        });\n        dispatch(setAlert(\"You successfully deleted your question\", \"success\"));\n    } catch (err) {\n        dispatch({\n            type: QuestionActionTypes.QUESTION_ERROR,\n            payload: { msg: err.message, status: err.response.status }\n          });\n    }\n}\n","import React, { Fragment, useState, useEffect } from 'react';\nimport Moment from \"react-moment\";\nimport { Link } from 'react-router-dom';\nimport { deleteQuestion, updateQuestion } from '../../../redux/question/question.actions';\nimport { connect } from 'react-redux';\n\nconst Question = ({question: {_id, text, user, date}, addAnswer, deleteQuestion, updateQuestion, productUserId, userId}) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [textToEdit, setTextToEdit] = useState(text);\n    const [answerMode, setAnswerMode] = useState(false);\n    const [textToAnswer, setTextToAnswer] = useState(\"\");\n\n    return (\n        <Fragment>\n            <div className=\"card bg-info m-4\">\n            <div className=\"card-body\">\n                {editMode ? (\n                    <Fragment>\n                    <input className=\"form-control\" value={textToEdit} placeholder=\"Something else on your mind ?...\" type=\"text\" onChange={e => setTextToEdit(e.target.value)} required/>\n                    <button type=\"button\" className=\"btn btn-success m-2\" onClick={() => {\n                        updateQuestion(textToEdit, _id);\n                        setEditMode(false);\n                    }}>Submit</button>\n                    </Fragment>\n                ) : (\n                   <p className=\"secondary\"> {text} </p>\n                )}\n                <p className=\"card-text\"><small className=\"text-muted\">Asked <Moment format=\"YYYY/MM/DD\">{date}</Moment> by {user.name} </small></p>\n                {user._id === userId && (\n                    <Fragment>\n                                    <button className=\"btn btn-primary mx-1\" onClick={() => setEditMode(!editMode)}> <i className=\"fas fa-edit\" /> </button>\n                <button className=\"btn btn-danger mx-1\" onClick={() => deleteQuestion(_id)}> <i className=\"fas fa-trash\" /> </button>\n                    </Fragment>\n                )}\n            </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default connect(null, {deleteQuestion, updateQuestion})(Question);\n","import React, {Fragment, useState, useEffect} from 'react';\nimport {Link, withRouter} from \"react-router-dom\";\nimport {getProduct, deleteSingleProduct} from \"../../redux/product/product.actions\";\nimport {getQuestions} from \"../../redux/question/question.actions\";\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport QuestionForm from './Question/QuestionForm';\nimport Question from './Question/Question';\nimport { compose } from 'redux';\n\n\nconst Product = ({getProduct, deleteSingleProduct, getQuestions, history, match, product: {product, loading}, auth, question: {questions}}) => {\n    useEffect(() => {\n        getProduct(match.params.id);\n        getQuestions(match.params.id);\n    }, [product, questions]);\n\n    return loading || !product || !auth.user ? \n    (\n        <Spinner />\n    ) : (\n        <Fragment>\n\n        <div className=\"container\">\n            <div className=\"col text-center bg-dark\">\n            <h1 className=\"title text-danger\">Sold by <Link className=\"text-info text-monospace\" to={`/user/products/${product.user._id}`}>{product.user.name}</Link></h1>\n            </div>\n        <div className=\"row\">\n        <div className=\"col text-center\">\n        <img src={product.image} alt=\"productImage\" className=\"img-fluid\"/>\n                        {product.user._id === auth.user._id && (\n            <Fragment>\n            <div className=\"col\">\n            <Link to={`/products/edit/${product._id}`} className=\"btn btn-dark m-3\">Edit</Link>\n            <button className=\"btn btn-danger\" onClick={() => deleteSingleProduct(product._id, history)}>\n            Delete\n            </button>\n            </div>\n            </Fragment>\n        )}\n        <p className=\"lead\"> {product.name}  <strong className=\"text-monospace text-danger font-weight-bold\">{product.price}$ </strong> </p>\n        <p className=\"text-warning font-weight-bold text-monospace\"> {product.description} </p>\n        {product.user._id !== auth.user._id && (\n                    <QuestionForm id={product._id} />\n        )}\n        {questions.map(question => (\n            <Fragment>\n            <Question key={question._id} question={question} productUserId={product.user._id} userId={auth.user._id} />\n            </Fragment>\n        ))}\n        </div>\n        </div>\n        </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    product: state.product,\n    auth: state.auth,\n    question: state.question,\n});\n\nexport default compose(withRouter, connect(mapStateToProps, {getProduct, deleteSingleProduct, getQuestions}))\n(Product);\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProducts } from '../../redux/product/product.actions';\nimport Pagination from '../products/Pagination/Pagination';\nimport Spinner from '../layout/Spinner';\nimport ProductItem from '../products/ProductItem/ProductItem';\n\nconst Profile = ({product: {products, totalProducts, loading}, match, getUserProducts}) => {\n    const [currentPage, setCurrentPage] = useState(1);\n    const [productsPerPage] = useState(6);\n    const paginate = pageNumber => setCurrentPage(pageNumber);\n\n    useEffect(() => {\n        getUserProducts(match.params.id, currentPage);\n    }, [currentPage, products]);\n\n    return loading ?\n        <Spinner /> : (\n        <Fragment>\n        <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col text-center\">\n        <h1 className=\"text-warning text-monospace\">Products</h1>\n        <p className=\"lead text-success font-weight-bold\">\n         Find Items From This Person!\n        </p>\n        </div>\n        </div>\n        </div>\n        <div className=\"container\">\n        <div className=\"row\">\n        {products.map(product => (\n            <div className=\"col-md-4 col-6\">\n                <ProductItem key={product._id} product={product} /> \n            </div>\n        ))};\n        <div className=\"col-12\">\n        {products && (\n                    <Pagination productsPerPage={productsPerPage} totalProducts={totalProducts} paginate={paginate} />\n        )}\n\n        </div>\n        </div>\n        </div>\n        </Fragment>\n        )\n}\n\nconst mapStateToProps = state => ({\n    product: state.product\n});\n\nexport default connect(mapStateToProps, {getUserProducts})(Profile);\n","import React, {Fragment} from 'react';\nimport {Link} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { deleteCartItem } from '../../redux/cart/cart.actions';\n\nconst CartItem = ({\n    cartItem,\n    deleteCartItem\n}) => {\n    return (\n        <Fragment>\n            <div className=\"card bg-success rounded-lg\">\n                <img src={cartItem.product.image} className=\"card-img-top\" alt=\"product\"/>\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-center text-danger bg-warning\">\n                        {cartItem.product.name}\n                    </h5>\n                    <p className=\"card-text font-weight-bold text-center\">Total Price: <strong>{cartItem.product.price * cartItem.quantity}</strong> \n                        <i className=\"fas fa-dollar-sign\"/></p>\n                        <p className=\"card-text font-weight-bold text-center\">Quantity: <strong>{cartItem.quantity}</strong> \n                        </p>\n                    <Link className=\"btn btn-outline-warning mx-1\" to={`/products/${cartItem.product._id}`}>View</Link>\n                    <button onClick={() => deleteCartItem(cartItem._id)} className=\"btn btn-outline-danger\"> <i className=\"fas fa-trash-alt\" /> </button>\n                </div>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default connect(null, {deleteCartItem})(CartItem);\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { postCartPayment } from '../../redux/cart/cart.actions';\nimport { connect } from 'react-redux';\n\nconst StripeButton = ({ price, postCartPayment }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_VDVUHRqmElyMUwYUqFclQheZ';\n\n  const onToken = token => {\n    postCartPayment(priceForStripe, token);\n  };\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='Cubical Inc.'\n      billingAddress\n      shippingAddress\n      image='https://svgshare.com/i/CUz.svg'\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nexport default connect(null, {postCartPayment})(StripeButton);","import React, {Fragment, useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCartProducts } from '../../redux/cart/cart.actions';\nimport CartItem from './CartItem';\nimport StripeButton from './StripeButton';\n\nconst Cart = ({getCartProducts, cart: {cartItems, totalQuantity, loading, totalPrice}}) => {\n    useEffect(() => {\n        getCartProducts();\n    }, [cartItems, totalQuantity, totalPrice]);\n\n    return loading ? <Spinner /> : (\n        <Fragment>\n        <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col text-center\">\n        <h1 className=\"text-warning text-monospace\">Your Cart!</h1>\n        <p className=\"lead text-success font-weight-bold\">\n         Total Price: <strong className=\"text-danger font-weight-bold text-monospace\">{totalPrice + \"$\"} </strong>{\" \"} Total Items in Quantity: <strong className=\"text-danger font-weight-bold text-monospace\">{totalQuantity + \"X\"} </strong>\n        </p>\n        </div>\n        </div>\n        </div>\n        <div className=\"container\">\n        <div className=\"row\">\n        {cartItems.map(cartItem => (\n            <div className=\"col-md-4 col-6\">\n                <CartItem key={cartItem._id} cartItem={cartItem} /> \n            </div>\n        ))};\n\n        </div>\n        <br />\n        <div className=\"col text-center mt-5\">\n        <h1 className=\"lead text-danger font-weight-bold mb-4\">\n        *Please use the following test credit card for payments*\n        <br />\n        4242 4242 4242 4242 - Exp: 01/22 - CVV: 123\n        </h1>\n        <StripeButton price={totalPrice} />\n        </div>\n        </div>\n        </Fragment>\n    );\n} \n\n\nconst mapStateToProps = state => ({\n    cart: state.cart\n});\n\nexport default connect(mapStateToProps, {getCartProducts})(Cart);","import './App.css';\nimport React, {Fragment, useEffect} from 'react';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport store from \"./redux/store\";\nimport setAuthToken from './utils/setAuthToken';\nimport { loadUser } from './redux/auth/auth.actions';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Alert from './components/layout/Alert';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProduct from './components/product-forms/CreateProduct';\nimport Products from './components/products/Products';\nimport EditProduct from './components/product-forms/EditProduct';\nimport Product from './components/product/Product';\nimport { getCartProducts } from './redux/cart/cart.actions';\nimport Profile from './components/profile/Profile';\nimport Cart from './components/cart/Cart';\n\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token)\n}\n\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n    store.dispatch(getCartProducts());\n  }, []);\n  \n  return (  \n    \n    <Provider store={store}>\n    <Router>\n    <Fragment>\n    <Navbar />\n    <Alert />\n    <Route exact path=\"/\" component={Landing} />\n    <Switch>\n    <Route exact path=\"/register\" component={Register} />\n    <Route exact path=\"/login\" component={Login} />\n    <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n    <PrivateRoute exact path=\"/add-product\" component={CreateProduct} />\n    <PrivateRoute exact path=\"/products\" component={Products} />\n    <PrivateRoute exact path=\"/products/edit/:id\" component={EditProduct} />\n    <PrivateRoute exact path=\"/products/:id\" component={Product} />\n    <PrivateRoute exact path=\"/user/products/:id\" component={Profile} />\n    <PrivateRoute exact path=\"/cart\" component={Cart} />\n    </Switch>\n    </Fragment>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n\n","import \"bootstrap/dist/css/bootstrap.css\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}